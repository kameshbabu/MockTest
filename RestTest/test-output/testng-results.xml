<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="5" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="5644" started-at="2020-07-23T15:23:00 IST" finished-at="2020-07-23T15:23:06 IST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="5644" started-at="2020-07-23T15:23:00 IST" finished-at="2020-07-23T15:23:06 IST">
      <class name="com.rest.igtest.tests.MockTestPostive">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.rest.igtest.tests.MockTestPostive@7a765367]" name="setup" is-config="true" duration-ms="1769" started-at="2020-07-23T15:22:58 IST" finished-at="2020-07-23T15:23:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TestMock_ResponseBody_IsAgeCorrect()[pri:0, instance:com.rest.igtest.tests.MockTestPostive@7a765367]" name="TestMock_ResponseBody_IsAgeCorrect" duration-ms="3633" started-at="2020-07-23T15:23:00 IST" finished-at="2020-07-23T15:23:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestMock_ResponseBody_IsAgeCorrect -->
        <test-method status="PASS" signature="TestMock_ResponseBody_IsCompanyCorrect()[pri:0, instance:com.rest.igtest.tests.MockTestPostive@7a765367]" name="TestMock_ResponseBody_IsCompanyCorrect" duration-ms="386" started-at="2020-07-23T15:23:04 IST" finished-at="2020-07-23T15:23:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestMock_ResponseBody_IsCompanyCorrect -->
        <test-method status="PASS" signature="TestMock_ResponseBody_IsRoleCorrect()[pri:0, instance:com.rest.igtest.tests.MockTestPostive@7a765367]" name="TestMock_ResponseBody_IsRoleCorrect" duration-ms="462" started-at="2020-07-23T15:23:04 IST" finished-at="2020-07-23T15:23:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestMock_ResponseBody_IsRoleCorrect -->
        <test-method status="PASS" signature="TestMock_ResponseHeader_IsJson()[pri:0, instance:com.rest.igtest.tests.MockTestPostive@7a765367]" name="TestMock_ResponseHeader_IsJson" duration-ms="375" started-at="2020-07-23T15:23:05 IST" finished-at="2020-07-23T15:23:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestMock_ResponseHeader_IsJson -->
        <test-method status="FAIL" signature="TestMock_Response_Status200()[pri:0, instance:com.rest.igtest.tests.MockTestPostive@7a765367]" name="TestMock_Response_Status200" duration-ms="726" started-at="2020-07-23T15:23:05 IST" finished-at="2020-07-23T15:23:06 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Status code is success
Expected: <204>
     but: was <200>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Status code is success
Expected: <204>
     but: was <200>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at com.rest.igtest.tests.MockTestPostive.TestMock_Response_Status200(MockTestPostive.java:29)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1255)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1214)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1136)
at org.testng.TestNG.runSuites(TestNG.java:1066)
at org.testng.TestNG.run(TestNG.java:1034)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestMock_Response_Status200 -->
      </class> <!-- com.rest.igtest.tests.MockTestPostive -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
